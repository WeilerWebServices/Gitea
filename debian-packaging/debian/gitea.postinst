#!/bin/sh
set -e

. /usr/share/debconf/confmodule

case "$1" in
    configure)
        # Create gitea user and group
        if ! getent group gitea >/dev/null; then
            addgroup --system --quiet gitea
        fi
        if ! getent passwd gitea >/dev/null; then
            adduser --quiet \
                    --system \
                    --disabled-login \
                    --no-create-home \
                    --shell /bin/bash \
                    --ingroup gitea \
                    --home /var/lib/gitea \
                    --gecos "Gitea Daemon" \
                    gitea
        fi

        # Make sure log directory has correct permissions set
        dpkg-statoverride --list "/var/log/gitea" >/dev/null || \
            dpkg-statoverride --add --force --quiet --update gitea adm 0750 /var/log/gitea

        # If this is a fresh install
        if [ -z "$2" ]; then
            # Make sure gitea can access files
            if [ -d /var/lib/gitea ]; then
                chown gitea:gitea /var/lib/gitea
                chown gitea:gitea /var/lib/gitea/data
                chown gitea:gitea /var/lib/gitea/repositories
            fi
        fi

        ##
        # Unavailable internal commands:
        #   runGenerateInternalToken, runGenerateLfsJwtSecret, runGenerateSecretKey
        ##

        # Set a unique secret key if one hasn't been provided
        if grep -q 'Xx-secret-key-xX' /etc/gitea/conf/app.ini; then
            db_get gitea/secret-key || true
            _SK=$(echo "$RET" | sed -e 's/[]\/$*.^|[]/\\&/g')
            [ -n "$_SK" ] || _SK=$(date +%s%Z%N | sha256sum | base64 -w 14 | head -c 14)
            sed -i "s/Xx-secret-key-xX/$_SK/" /etc/gitea/conf/app.ini
            db_clear gitea/secret-key || true
            db_go
        fi

        # Set a unique internal token if one hasn't been provided
        if grep -q 'Xx-internal-token-xX' /etc/gitea/conf/app.ini; then
            db_get gitea/internal-token || true
            _SK=$(echo "$RET" | sed -e 's/[]\/$*.^|[]/\\&/g')
            [ -n "$_SK" ] || _SK=$(date +%s%Z%N | sha512sum | base64 -w 120 | head -c 120)
            sed -i "s/Xx-internal-token-xX/$_SK/" /etc/gitea/conf/app.ini
            db_clear gitea/internal-token || true
            db_go
        fi

        # Set a unique lfs secret if one hasn't been provided
        if grep -q 'Xx-lfs-secret-xX' /etc/gitea/conf/app.ini; then
            db_get gitea/lfs-secret || true
            _SK=$(echo "$RET" | sed -e 's/[]\/$*.^|[]/\\&/g')
            sed -i "s/Xx-lfs-secret-xX/$_SK/" /etc/gitea/conf/app.ini
            db_clear gitea/lfs-secret || true
            db_go
        fi

        # Enable git-lfs if selected
        if grep -q 'Xx-lfs-enable-xX' /etc/gitea/conf/app.ini; then
            db_get gitea/enable-lfs || true
	    if "$RET"; then
                sed -i "s/Xx-lfs-enable-xX/true/" /etc/gitea/conf/app.ini
            else
                sed -i "s/Xx-lfs-enable-xX/false/" /etc/gitea/conf/app.ini
            fi
        fi

        # Set the host and port used for accessing this Gitea instance
        if grep -q 'Xx-gitea-host-xX' /etc/gitea/conf/app.ini ||
                grep -q 'Xx-gitea-port-xX' /etc/gitea/conf/app.ini; then
            db_input high gitea/gitea-address || true
            db_go
            db_get gitea/gitea-address && address="$RET"
            _host="${address%:*}"
            _port="${address#*:}"
            sed -i "s/Xx-gitea-host-xX/$_host/" /etc/gitea/conf/app.ini
            sed -i "s/Xx-gitea-port-xX/$_port/" /etc/gitea/conf/app.ini
        fi
        ;;

  abort-upgrade|abort-remove|abort-deconfigure)
        ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

#DEBHELPER#

exit 0
